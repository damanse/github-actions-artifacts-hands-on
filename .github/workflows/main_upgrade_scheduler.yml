name: Main Upgrade Scheduler

on:
  workflow_dispatch:
    inputs:
      site:
        description: 'Site to process'
        required: true
        type: string
        default: 'PG_256'
      start_time:
        description: 'Start of allowed time window (UTC HH:MM)'
        required: true
        default: '07:30'
      end_time:
        description: 'End of allowed time window (UTC HH:MM)'
        required: true
        default: '18:30'

jobs:
  get-pods-for-upgrade:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Ansible Playbook to Get Pods
        run: |
          ansible-playbook playbooks/get-pods-for-upgrade.yml --extra-vars "site=${{ inputs.site }}"

      - name: File Formatting
        run: |
          sed -i 's/ //g' /tmp/pods.json

      - name: File Debug
        run: |
          cat /tmp/pods.json
      
      - name: Read pods from /tmp/pods.json
        id: set-matrix
        run: |
          if [ -f /tmp/pods.json ]; then
            POD_JSON=$(cat /tmp/pods.json)
            echo "matrix=$POD_JSON" >> $GITHUB_OUTPUT
          else
            echo "Error: /tmp/pods.json does not exist."
            exit 1
          fi

  # debug-pod-json:
  #   runs-on: ubuntu-latest
  #   needs: get-pods-for-upgrade
  #   steps:
  #     - name: Debug pod_json
  #       run: |
  #         echo "pod_json for run-upgrades: ${{ needs.get-pods-for-upgrade.outputs.pod_json }}"

  run-upgrades:
    needs: get-pods-for-upgrade
    strategy:
      matrix:
        include: ${{ fromJson(needs.get-pods-for-upgrade.outputs.matrix) }}
      fail-fast: false
    uses: ./.github/workflows/pod_upgrade_handler.yml
    with:
      pod: ${{ matrix.pod }}
      hosts: ${{ toJson(matrix.hosts) }}
      start_time: ${{ inputs.start_time }}
      end_time: ${{ inputs.end_time }}
