name: Main Upgrade Scheduler
run-name: Main Upgrade Scheduler - ${{ inputs.site }} - ${{ site_group }}

on:
  workflow_dispatch:
    inputs:
      site:
        description: 'Site/POD Group to process'
        required: true
        type: string
        default: 'pg_256'
      site_group:
        description: 'Site Group to process'
        required: true
        type: string
        default: 'BLUE'
      start_time:
        description: 'Start of allowed time window (UTC HH:MM)'
        required: true
        default: '07:30'
      end_time:
        description: 'End of allowed time window (UTC HH:MM)'
        required: true
        default: '18:30'

jobs:
  get-pods-for-upgrade:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Pods for Upgrade
        run: |
          ansible-playbook playbooks/get-pods-for-upgrade.yml --extra-vars "site=${{ inputs.site }} site_group=${{ inputs.site_group }}"

      - name: Evaulate Hosts (Workfload Evaluator...)
        run: |
          ansible-playbook playbooks/evalutate-hosts.yml --extra-vars "pods_json_file=/tmp/pods.json"
      
      - name: File Formatting
        run: |
          sed -i 's/ //g' /tmp/pods.json

      - name: File Debug
        run: |
          cat /tmp/pods.json
      
      - name: Read pods from /tmp/pods.json
        id: set-matrix
        run: |
          if [ -f /tmp/pods.json ]; then
            POD_JSON=$(cat /tmp/pods.json)
            echo "matrix=$POD_JSON" >> $GITHUB_OUTPUT
          else
            echo "Error: /tmp/pods.json does not exist."
            exit 1
          fi

  # debug-pod-json:
  #   runs-on: ubuntu-latest
  #   needs: get-pods-for-upgrade
  #   steps:
  #     - name: Debug pod_json
  #       run: |
  #         echo "pod_json for run-upgrades: ${{ needs.get-pods-for-upgrade.outputs.pod_json }}"

  run-upgrades:
    needs: get-pods-for-upgrade
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.get-pods-for-upgrade.outputs.matrix) }}
      fail-fast: false

    steps:
      - name: Debug matrix hosts
        run: |
          echo "Matrix hosts: ${{ toJson(matrix.hosts) }}"
          echo "Stringified hosts: $(echo '${{ toJson(matrix.hosts) }}' | jq -c .)"

      - name: Trigger pod_upgrade_handler workflow
        uses: actions/github-script@v6
        with:
          script: |
            const workflow_id = "pod_upgrade_handler.yml";
            const ref = "working-independant-workflows"; // Replace with the branch where the workflow resides
            const inputs = {
              pod: "${{ matrix.pod }}",
              hosts: JSON.stringify(${{
                toJson(matrix.hosts)
              }}), // Properly stringify the hosts array
              start_time: "${{ inputs.start_time }}",
              end_time: "${{ inputs.end_time }}"
            };

            console.log("Inputs being sent to pod_upgrade_handler:");
            console.log(inputs);

            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id,
              ref,
              inputs
            });

  cleanup:
    runs-on: ubuntu-latest
    needs: [get-pods-for-upgrade, run-upgrades]
    if: always()
    steps:
      - name: Cleanup pods.json file
        run: |
          if [ -f /tmp/pods.json ]; then
            rm /tmp/pods.json
            echo "/tmp/pods.json has been deleted."
          else
            echo "/tmp/pods.json does not exist. Nothing to delete."
          fi

